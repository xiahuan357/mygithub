/**
 * 邮箱验证导航界面
 */
define(function(require, exports, module) {
	var $ = require("$");
	var store = require("store");
	var basearchiveUtil = require('basearchive-util');
	var userutil = require("userutil");
	var Wizard = require("fuelux-wizard-instance");
	var loader = require('loader');
	var infoUrl= GLOBAL.BASE+"html/admin/customer/business/baseinfo/biz_business_userinfo_form.html";
	exports.init = function(param) {
		$(document).ready(
				function() {
					var userInfo = userutil.getUserInfo();

					$('#form_btn_return').die().live('click', function() {
						basearchiveUtil.jumpToHtml(tableUrl);
					});

					// 增加节点导航：1 填写基本信息；2 填写扩展信息
					var wizard = new Wizard({
						attrs : {
							steptitles : [ {
								title : '1 验证原邮箱',
								active : true,
								target : '#div_step1'
							}, {
								title : '2 输入新邮箱地址',
								active : false,
								target : '#div_step2'
							}, ],
							stepcontents : [ {
								id : 'div_step1',
								active : true,
							}, {
								id : 'div_step2'
							}, ]
						},
						renderTo : param.divWrapperId
					});

					// 第一个基本信息
					var FirstComponent = require("./emailvalidate_fir");
					// 第二个扩展信息
					var SecondComponent = require("./emailvalidate_sec");

					// 初始化第一个组件
					FirstComponent.init({
						attrs : {
							divWrapperId : "div_step1",
						}
					});

					var UXwizard = $('#' + param.divWrapperId);
					UXwizard.on('change', function(e, data) {

						// 加载第二步组件
						if (typeof (data) != "undefined" && data.step === 1
								&& data.direction === 'next') {
							var selector = $("#"
									+ FirstComponent.getValidateFormId());
							var checkResult = selector.validate().form();
							if (!checkResult)
								return false;
							if (FirstComponent.preemailvalidate()) {

								// 加载下一步界面元素
								SecondComponent.init({
									attrs : {
										divWrapperId : "div_step2",
									}
								});
							}

							else {
								bootbox.alertTimeout("输入原邮箱有误!");
								return false;
							}
						}
						// 上一步事件
						if (typeof (data) != "undefined" && data.step === 2
								&& data.direction === 'previous') {
						}
						// 上一步事件
						if (typeof (data) != "undefined" && data.step === 3
								&& data.direction === 'previous') {
						}
					});

					// 结束事件
					UXwizard.on('finished', function(e, data) {
						var storeRowData = store
								.get("currentSelectRowDatascenic");
						var optType = store.get("currentOptTypescenic");

						var desurl;
						var postData;

						var FORMOPTURL_INSERT = GLOBAL.BASE
								+ "admin/business/scenic/" + userInfo.id
								+ "/createwithimage";
						var FORMOPTURL_UPDATE = GLOBAL.BASE
								+ "admin/business/scenic/" + userInfo.id
								+ "/updatewithimage";

						var firstData = FirstComponent.getFormData();
						var secondData = SecondComponent.getFormData();
						var thirdData = ThirdComponent.getFormData();

						var scenicEntity = $.extend({}, firstData, secondData,
								thirdData);
						if (optType == basearchiveUtil.FORMOPT_CREATE) { // 新增，清空数据
							desurl = FORMOPTURL_INSERT;
						} else if (optType == basearchiveUtil.FORMOPT_UPDATE) { // 修改，回填数据
							desurl = FORMOPTURL_UPDATE + "/" + storeRowData.id;
						}
						postData = {
							currentEntity : scenicEntity,
							imagelist : SecondComponent.getImageList(),
						}
						var loader = require('loader');
						var doResult = false;

						loader.loading("正在保存，请稍等……");
						$.ajax({
							type : "POST",
							dataType : 'json',
							contentType : "application/json;charset=UTF-8",
							url : desurl,
							data : JSON.stringify(postData),
							success : function(resultdata) {
								loader.noloading();
								if ('000000' != resultdata.flag) {
									doResult = false; // 保存出错
									// 显示错误信息
									bootbox.alertTimeout(resultdata.desc);
								} else {
									doResult = true;
									bootbox.alertTimeout("保存成功！");
									// 跳转到登录界面
									basearchiveUtil.jumpToHtml(tableUrl);
								}
							},
							error : function(XMLHttpRequest, textStatus,
									errorThrown) {
								loader.noloading();
								doResult = false;
								bootbox.alertTimeout("操作失败！");
							}
						});

						return doResult;
					});
				});
		 $('#form_btn_return').die().live('click', function() {
				
				basearchiveUtil.jumpToHtml(infoUrl);
			});
	};

});
