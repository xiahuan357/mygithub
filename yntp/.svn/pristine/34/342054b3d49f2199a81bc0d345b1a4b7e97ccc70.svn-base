/**
 * 名族特色：表单
 */
define(function(require, exports, module) {

	var $ = require("$");
	require("bootstrap_commonrequire");
	require("bootbox.css");

	// ------------<ue
	require('ueditor.config-1.3.6');
	require('ueditor.all-1.3.6');
	require('ueditor-zh-cn-1.3.6');
	// ------------ue>

	var bootbox = require('bootbox');
	var theme = require('bootstrap_theme');
	var store = require('store');
	var loader = require('loader');
	var bootbox = require('bootbox');

	var basearchiveUtil = require('basearchive-util');
	var form = require('basearchive-form');
	
	var TARGETDIV_FORM = "basearchive_form";
	var MODULENAME = "tourismlinetrip";

	var COMPONENTID_FORM = "validationform" + "_" + MODULENAME;

	var tableUrl = GLOBAL.HTML_HOME + "admin/customer/business/tourismline/biz_tourismline_trip_table.html";
	var tourismlineTableUrl = GLOBAL.HTML_HOME + "admin/customer/business/tourismline/biz_tourismline_table.html";
	
	var editor;
	var baseRoot = "/yntp/";
	// 保存当前最新从数据库中查询出的对象
	var currentLastData = null;
	var param = {
		// Form信息
		form_attr : {
			formitem : {
				title : "线路行程",
				spansize : 'span12',
				type : basearchiveUtil.FORMOPT_CREATE, // create 创建 ; update 更新
				formid : COMPONENTID_FORM,
				targetdiv : TARGETDIV_FORM,
			},
			items : [ {
				isHidden : true,
				id : "hidden_id",
				name : "hidden_id",
				value : ""
			}, {
				isText : true,
				label : "标题",
				name : "text_title",
				id : "text_title",
				type : "text",
				style : "width:50%",
				placeholder : "标题",
				validations : {
					required : true,
					minlength : 1,
					maxlength : 255
				},
			}, {
				isText : true,
				label : "序号",
				id : 'text_sequence',
				name : 'text_sequence',
				type : "text",
				style : "width:80%",
				placeholder : "请输入序号",
				validations : {
					required : true,
					number : true,
					min : 0,
				},
			}, {
				id : 'text_description',
				isUEditor : true,
				name : 'text_description',
				label : '内容',
				style : "width:100%"
			}, {
				isHidden : true,
				id : 'hidden_imagekey',
			} ]
		},
	};

	// ------------<组件开始
	var com_id = $('#hidden_id');
	var com_title = $('#text_title');
	var com_sequence = $('#text_sequence');
	var com_description = $('#text_description');
	var com_imagekey = $('#hidden_imagekey');
	// ------------组件开始>

	function getUIComponent() {
		// ------------<组件开始
		com_id = $('#hidden_id');
		com_title = $('#text_title');
		com_sequence = $('#text_sequence');
		com_description = $('#text_description');
		com_imagekey = $('#hidden_imagekey');
		// ------------组件开始>
	}

	// 获得所有图片
	function getAllImage() {
		var root = UE.htmlparser(editor.getContent(), true);
		var imgs = new Array();
		var imgs = root.getNodesByTagName('img');
		var imgSrcList = new Array();
		if (imgs == null) {
			return imgSrcList;
		}

		for (var i = 0; i < imgs.length; i++) {
			imgSrcList.push(imgs[i].getAttr('src'));
		}
		return imgSrcList;
	}

	// 保存
	var fnsubmithandler = function() {
		var tourismlineInfo = store.get("currentSelectRowDatatourismline"); 
		var FORMOPTURL_INSERT = GLOBAL.BASE + "admin/business/tourismlinetrip/" + tourismlineInfo.id + "/createwithimage";
		var FORMOPTURL_UPDATE = GLOBAL.BASE + "admin/business/tourismlinetrip/" + tourismlineInfo.id + "/updatewithimage";

		var vid = com_id.attr("value"); // 编码
		var vtitle = com_title.attr("value"); // 标题
		var vsequence = com_sequence.attr("value"); // 序号
		var vcontent = UE.getEditor('text_description').getContent(); // 内容
		var vimagekey = com_imagekey.attr("value"); // 文件key
		var vimageList = getAllImage();

		if (vcontent == null || vcontent == "" || $.trim(vcontent) == "") {
			bootbox.alertTimeout("内容不能为空！");
			return;
		}

		var optType = store.get("currentOptType" + MODULENAME);
		var requestURL;
		var requestType;

		var currentEntity = {
				title : vtitle,
				sequence : vsequence,
				description : vcontent,
				imagekey : vimagekey,
		}
		
		if (optType == basearchiveUtil.FORMOPT_UPDATE) {
			currentEntity.id = vid;
			currentEntity.createtime = new Date(currentLastData.createtime).format("yyyy-MM-dd hh:mm:ss");
			requestURL = FORMOPTURL_UPDATE + "/" + vid;
		} else {
			requestURL = FORMOPTURL_INSERT;
		}
		
		var model = {
				currentEntity : currentEntity,
				imagelist : vimageList,
		};
		
		var saveResult = false;
		$.ajax({
			async : false,
			type : "POST",
			dataType : 'json',
			contentType : "application/json;charset=UTF-8",
			url : requestURL,
			data : JSON.stringify(model), 
			success : function(data) {
				saveResult = true;
				if (optType == basearchiveUtil.FORMOPT_CREATE) {
					bootbox.alertTimeout("发布成功！");
				} else if (optType == basearchiveUtil.FORMOPT_UPDATE) {
					bootbox.alertTimeout("修改成功！");
				}
			},
			error : function(XMLHttpRequest, textStatus, errorThrown) {
				saveResult = false;
				bootbox.alertTimeout("操作失败！");
			}
		});

		if (saveResult) {
			// 清除本地store的数据
			var cacheKeyList = [ "currentSelectRowData" + MODULENAME, "currentOptType" + MODULENAME ];
			basearchiveUtil.clearStoreCache(cacheKeyList);
			// 界面跳转
			basearchiveUtil.jumpToHtml(tableUrl);
		} else {
			return false;
		}
	};

	// 初始化Form数据，新建和编辑时
	function initFormValue(optType, data) {

		var tourismlineInfo = store.get("currentSelectRowDatatourismline"); 
		var FORMOPTURL_QUERY = GLOBAL.BASE + "admin/business/tourismlinetrip/search/" + tourismlineInfo.id + "/triplist";
		
		if (optType == basearchiveUtil.FORMOPT_CREATE) { // 新增，清空数据
			if (com_id != 'undefined' && com_id != null)
				com_id.val("");
			if (com_sequence != 'undefined' && com_sequence != null)
				com_sequence.val("");

			getImageKey();// 初始化图片key
			initUeditor(null); // 初始化文本内容
		} else if (optType == basearchiveUtil.FORMOPT_UPDATE) { // 修改，回填数据

			// 重新从数据库中读取数据
			var queryUrl = FORMOPTURL_QUERY + "?q=id=" + data.id;
			var lastdata = null;
			$.ajax({
				async : false,
				type : "GET",
				dataType : 'json',
				contentType : "application/json;charset=UTF-8",
				url : queryUrl,
				success : function(resultdata) {
					if ('000000' != resultdata.flag) {
						bootbox.alertTimeout('查询数据出现错误，请刷新重试！');
						lastdata = null; // 查询出错
					} else {
						var receiptList = resultdata.data;
						if (receiptList != null && receiptList.length > 0) {
							lastdata = receiptList[0];
						} else {
							bootbox.alertTimeout('查询数据出现错误，请刷新重试！');
							lastdata = null; // 没有此条数据
						}
					}
				},
				error : function(XMLHttpRequest, textStatus, errorThrown) {
					bootbox.alertTimeout('查询数据出现错误，请重试！');
				}
			});

			// 保存当前对象值
			currentLastData = lastdata;
			if (null == lastdata) {
				// 清除本地store的数据
				var cacheKeyList = [ "currentSelectRowData" + MODULENAME, "currentOptType" + MODULENAME ];
				basearchiveUtil.clearStoreCache(cacheKeyList);

				basearchiveUtil.jumpToHtml(tableUrl);
			}

			if (com_id != 'undefined' && com_id != null)
				com_id.val(data.id);
			if (com_title != 'undefined' && com_title != null)
				com_title.val(data.title);
			if (com_sequence != 'undefined' && com_sequence != null)
				com_sequence.val(data.sequence);
			if (com_imagekey != 'undefined' && com_imagekey != null)
				com_imagekey.val(data.imagekey);

			initUeditor(data.description); // 初始化文本内容
			// 将记录的上传的文件清除
			clearImageMap($('#hidden_imagekey').attr("value"));
		}
	}

	// 新建时，获得图片key
	function getImageKey() {
		$.ajax({
			async : false,
			dataType : 'json',
			contentType : "application/json;charset=UTF-8",
			type : "GET",
			url : "/yntp/imageupload/imagekey",
			success : function(data) {
				$("#hidden_imagekey").attr("value", data.data);
			},
			error : function(XMLHttpRequest, textStatus, errorThrown) {
				bootbox.alertTimeout('初始化数据出现错误！');
			}
		});
	}

	/**
	 * 初始化富文本
	 */
	function initUeditor(content) {
		var option = {
			imageUrl : "/yntp/imageupload/ueditorpicupload?imagekey=" + $('#hidden_imagekey').attr("value"),
			imagePath : baseRoot,
			initialFrameHeight : 320,
			autoClearinitialContent : true, // 是否自动清除编辑器初始内容
			elementPathEnabled : false,
		};

		editor = new UE.ui.Editor(option);
		editor.render("text_description");

		if (content == null) {
			UE.getEditor('text_description', option).ready(function() {
				this.setContent("");
			});
		} else {
			UE.getEditor('text_description', option).ready(function() {
				this.setContent(content);
			});
		}
		// 设置编辑框的宽度
		$(".edui-editor").css("width", "99%");
	}

	// 编辑对象时，需要将已经记录的上传的文件删除
	function clearImageMap(imagekey) {
		var requstUrl = "/yntp/imageupload/clearimagemap";

		$.ajax({
			type : "POST",
			async : false,
			dataType : "text",
			url : requstUrl,
			data : {
				imagekey : imagekey
			},
			success : function(data) {

			},
			error : function(XMLHttpRequest, textStatus, errorThrown) {

			}
		});
	}

	// 取消了，需要将上传的文件删除
	function deleteCancelImage(optType, imagekey) {
		var requstUrl;
		if (optType == basearchiveUtil.FORMOPT_CREATE) {
			requstUrl = "/yntp/imageupload/create/cancel";
		} else if (optType == basearchiveUtil.FORMOPT_UPDATE) {
			requstUrl = "/yntp/imageupload/update/cancel";
		}

		$.ajax({
			type : "POST",
			async : false,
			dataType : "text",
			url : requstUrl,
			data : {
				imagekey : imagekey
			},
			success : function(data) {

			},
			error : function(XMLHttpRequest, textStatus, errorThrown) {

			}
		});
	}

	exports.init = function() {
		$(document) .ready( function() {
			// 初始化组件
			form.init(param);

			// 获得UI组件，方便使用
			getUIComponent();

			// 初始化界面值
			var storeRowData = store.get("currentSelectRowData" + MODULENAME);
			var optType = store.get("currentOptType" + MODULENAME);

			initFormValue(optType, storeRowData);

			// 取消方法
			$('#btn_mct_cancel') .die() .on( 'click', function() {
				bootbox .confirm( '确认取消？', function( YesOrNo) {
					if (YesOrNo) {
						// 清除本地store数据
						var cacheKeyList = [
								"currentSelectRowData" + MODULENAME,
								"currentOptType" + MODULENAME ];
						basearchiveUtil .clearStoreCache(cacheKeyList);
						// 清除已经上传的文件
						deleteCancelImage( optType, $( '#hidden_imagekey') .attr( "value"));

						basearchiveUtil .jumpToHtml(tableUrl);
					}
				});
			});

			$("#tourismlineLink").die().on('click', function() {
				basearchiveUtil.jumpToHtml(tourismlineTableUrl);
			});
			
			//加载验证
			theme.setValidateForm($("#" + COMPONENTID_FORM), fnsubmithandler);
		});
	};
});