package com.yn.yntp.common.web.controller.upload;

import java.io.File;
import java.io.IOException;
import java.util.ArrayList;
import java.util.HashMap;
import java.util.Iterator;
import java.util.List;
import java.util.Map;

import javax.servlet.ServletContext;
import javax.servlet.http.HttpServletResponse;

import org.springframework.stereotype.Controller;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.bind.annotation.ResponseBody;
import org.springframework.web.multipart.MultipartFile;
import org.springframework.web.multipart.MultipartHttpServletRequest;
import org.springframework.web.multipart.commons.CommonsMultipartResolver;

/**
 * 
 * @Title: ImageUploadController.java
 * @Package com.yn.yntp.common.web.controller
 * @Description: 图片上传相关
 *
 * @author liucc
 * @date 2014年11月21日 下午9:47:55
 * @version V1.0
 */
@Controller
public class UEditorUploadController extends BaseImageUploadController {
  
  /**
   * ueditor 富文本编辑控件的图片上传
   * 
   * @param request
   * @param response
   * @param imagekey
   * @return
   * @throws IOException
   */
  @SuppressWarnings("rawtypes")
  @RequestMapping(value = "imageupload/ueditorpicupload", method = RequestMethod.POST)
  @ResponseBody
  public Map uEditorPicUpload(MultipartHttpServletRequest request,
      HttpServletResponse response, @RequestParam("imagekey") String imagekey)
      throws IOException {

    ServletContext sc = request.getSession().getServletContext();
    String serverBase = sc.getRealPath("/");

    // 设置上下方文
    CommonsMultipartResolver multipartResolver =
        new CommonsMultipartResolver(request.getSession().getServletContext());
    // 返回结果
    Map<String, String> retMap = new HashMap<String, String>();
    // 检查form是否有enctype="multipart/form-data"
    if (multipartResolver.isMultipart(request)) {
      MultipartHttpServletRequest multiRequest =
          (MultipartHttpServletRequest) request;

      Iterator<String> iter = multiRequest.getFileNames();
      while (iter.hasNext()) {
        // 由CommonsMultipartFile继承而来,拥有上面的方法.
        MultipartFile file = multiRequest.getFile(iter.next());
        if (file != null) {
          String fileKey = imagekey;
          // 获得图片地址
          String targetFolder = serverBase + uploadPath + fileKey;
          fileOpt.createFolder(targetFolder);
          String relativePath = uploadPath + fileKey + "/" + getNewFileName(file.getOriginalFilename());
          String path = serverBase + relativePath;

          // 保存图片
          File localFile = new File(path);
          file.transferTo(localFile);

          // 记录上传的文件
          if (uploadedImageFileMap.containsKey(fileKey)) {
            uploadedImageFileMap.get(fileKey).add(projectBase + relativePath);
          }
          else {
            List<String> imageList = new ArrayList<String>();
            imageList.add(projectBase + relativePath);
            uploadedImageFileMap.put(fileKey, imageList);
          }

          // 返回信息
          retMap.put("original", file.getOriginalFilename());
          retMap.put("url", relativePath);
          retMap.put("title", "");
          retMap.put("state", "SUCCESS");
        }
      }
    }
    return retMap;
  }
}
